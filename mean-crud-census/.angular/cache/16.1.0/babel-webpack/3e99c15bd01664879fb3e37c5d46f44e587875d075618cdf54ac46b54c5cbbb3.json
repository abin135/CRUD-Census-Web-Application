{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/service/crud.service\";\nexport class UpdateCensusComponent {\n  constructor(formBuilder, router, route, ngZone, crudService) {\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.route = route;\n    this.ngZone = ngZone;\n    this.crudService = crudService;\n    this.Census = [];\n    this.censusForm = this.formBuilder.group({\n      householdAddress: [''],\n      householdCity: [''],\n      householdState: [''],\n      householdZip: [''],\n      numPeople: [''],\n      year: [''],\n      takerName: ['']\n    });\n  }\n  ngOnInit() {\n    this.paramsObserver = this.route.params.subscribe(params => {\n      let id = params['id'];\n      console.log('editing', id);\n      this.crudService.GetCensus(id).subscribe(Census => {\n        console.log('got cencus by id', Census);\n        this.Census = Census;\n      });\n    });\n  }\n  onUpdate(id) {\n    console.log('opening form to update', id, this.censusForm.value);\n    this.crudService.UpdateCensus(id, this.censusForm.value).subscribe(res => {\n      console.log(res);\n      this.ngZone.run(() => this.router.navigateByUrl('/censuses-list'));\n    });\n  }\n}\nUpdateCensusComponent.ɵfac = function UpdateCensusComponent_Factory(t) {\n  return new (t || UpdateCensusComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i3.CrudService));\n};\nUpdateCensusComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UpdateCensusComponent,\n  selectors: [[\"app-update-census\"]],\n  decls: 34,\n  vars: 1,\n  consts: [[1, \"row\", \"justive-content-center\", \"mt-5\"], [1, \"col-md-4\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"type\", \"text\", \"formControlName\", \"householdAddress\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"householdCity\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"householdState\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"householdZip\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"numPeople\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"year\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"takerName\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-block\"]],\n  template: function UpdateCensusComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function UpdateCensusComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onUpdate(ctx.Census.id);\n      });\n      i0.ɵɵelementStart(3, \"div\", 3)(4, \"label\");\n      i0.ɵɵtext(5, \"Address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 3)(8, \"label\");\n      i0.ɵɵtext(9, \"City\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 3)(12, \"label\");\n      i0.ɵɵtext(13, \"State\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 3)(16, \"label\");\n      i0.ɵɵtext(17, \"Zip\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 3)(20, \"label\");\n      i0.ɵɵtext(21, \"Number of People at Address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"div\", 3)(24, \"label\");\n      i0.ɵɵtext(25, \"Year\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(26, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"div\", 3)(28, \"label\");\n      i0.ɵɵtext(29, \"Census Taker\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(30, \"input\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"div\", 3)(32, \"button\", 11);\n      i0.ɵɵtext(33, \"Update Census\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.censusForm);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["UpdateCensusComponent","constructor","formBuilder","router","route","ngZone","crudService","Census","censusForm","group","householdAddress","householdCity","householdState","householdZip","numPeople","year","takerName","ngOnInit","paramsObserver","params","subscribe","id","console","log","GetCensus","onUpdate","value","UpdateCensus","res","run","navigateByUrl","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","Router","ActivatedRoute","NgZone","i3","CrudService","selectors","decls","vars","consts","template","UpdateCensusComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","UpdateCensusComponent_Template_form_ngSubmit_2_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["E:\\School\\CIS360 Web Application Dev\\Final-Practical-Exam\\mean-crud-census\\src\\app\\components\\update-census\\update-census.component.ts","E:\\School\\CIS360 Web Application Dev\\Final-Practical-Exam\\mean-crud-census\\src\\app\\components\\update-census\\update-census.component.html"],"sourcesContent":["import { Component, OnInit, NgZone } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Census } from 'src/app/service/Census';\nimport { CrudService } from 'src/app/service/crud.service';\n\n@Component({\n  selector: 'app-update-census',\n  templateUrl: './update-census.component.html',\n  styleUrls: ['./update-census.component.css']\n})\nexport class UpdateCensusComponent implements OnInit {\n  censusForm: FormGroup;\n  Census: any = [];\n  paramsObserver: any;\n\n  constructor(\n    public formBuilder: FormBuilder,\n    private router: Router,\n    private route: ActivatedRoute,\n    private ngZone: NgZone,\n    private crudService: CrudService\n  ) {\n    this.censusForm = this.formBuilder.group({\n      householdAddress: [''],\n      householdCity: [''],\n      householdState: [''],\n      householdZip: [''],\n      numPeople: [''],\n      year: [''],\n      takerName: ['']\n    })\n  }\n\n  ngOnInit(): void { \n    this.paramsObserver = this.route.params.subscribe(params => {\n      let id = params['id'];\n      console.log('editing', id);\n      this.crudService.GetCensus(id).subscribe(Census => {\n        console.log('got cencus by id', Census)\n        this.Census = Census;\n      })\n    })\n  }\n\n  onUpdate(id: any): any {\n    console.log('opening form to update', id, this.censusForm.value);\n    this.crudService.UpdateCensus(id, this.censusForm.value)\n      .subscribe(\n        res => {\n          console.log(res)\n      this.ngZone.run(() => this.router.navigateByUrl('/censuses-list'));\n      })\n    }\n}","<div class=\"row justive-content-center mt-5\">\n    <div class=\"col-md-4\">\n        <form [formGroup]=\"censusForm\" (ngSubmit)=\"onUpdate(Census.id)\">\n            <div class=\"form-group\">\n                <label>Address</label>\n                <input class=\"form-control\" type=\"text\"\n                    formControlName=\"householdAddress\" required>\n            </div>\n            <div class=\"form-group\">\n                <label>City</label>\n                <input class=\"form-control\" type=\"text\"\n                    formControlName=\"householdCity\" required>\n            </div>\n            <div class=\"form-group\">\n                <label>State</label>\n                <input class=\"form-control\" type=\"text\"\n                    formControlName=\"householdState\" required>\n            </div>\n            <div class=\"form-group\">\n                <label>Zip</label>\n                <input class=\"form-control\" type=\"text\"\n                    formControlName=\"householdZip\" required>\n            </div>\n            <div class=\"form-group\">\n                <label>Number of People at Address</label>\n                <input class=\"form-control\" type=\"text\"\n                    formControlName=\"numPeople\" required>\n            </div>\n            <div class=\"form-group\">\n                <label>Year</label>\n                <input class=\"form-control\" type=\"text\"\n                    formControlName=\"year\" required>\n            </div>\n            <div class=\"form-group\">\n                <label>Census Taker</label>\n                <input class=\"form-control\" type=\"text\"\n                    formControlName=\"takerName\" required>\n            </div>\n            <div class=\"form-group\">\n                <button class=\"btn btn-primary btn-block\"\n                    type=\"submit\">Update Census</button>\n            </div>\n        </form>\n    </div>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}